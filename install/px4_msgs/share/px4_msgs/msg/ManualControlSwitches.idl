// generated from rosidl_adapter/resource/msg.idl.em
// with input from px4_msgs/msg/ManualControlSwitches.msg
// generated code does not contain a copyright notice


module px4_msgs {
  module msg {
    module ManualControlSwitches_Constants {
      const uint8 SWITCH_POS_NONE = 0;
      const uint8 SWITCH_POS_ON = 1;
      const uint8 SWITCH_POS_MIDDLE = 2;
      const uint8 SWITCH_POS_OFF = 3;
      const uint8 MODE_SLOT_NONE = 0;
      const uint8 MODE_SLOT_1 = 1;
      const uint8 MODE_SLOT_2 = 2;
      const uint8 MODE_SLOT_3 = 3;
      const uint8 MODE_SLOT_4 = 4;
      const uint8 MODE_SLOT_5 = 5;
      const uint8 MODE_SLOT_6 = 6;
      const uint8 MODE_SLOT_NUM = 6;
    };
    struct ManualControlSwitches {
      @verbatim (language="comment", text=
        " time since system start (microseconds)")
      uint64 timestamp;

      @verbatim (language="comment", text=
        " the timestamp of the raw data (microseconds)")
      uint64 timestamp_sample;

      @verbatim (language="comment", text=
        " the slot a specific model selector is in")
      uint8 mode_slot;

      @verbatim (language="comment", text=
        " arm/disarm switch: _DISARMED_, ARMED")
      uint8 arm_switch;

      @verbatim (language="comment", text=
        " return to launch 2 position switch (mandatory): _NORMAL_, RTL")
      uint8 return_switch;

      @verbatim (language="comment", text=
        " loiter 2 position switch (optional): _MISSION_, LOITER")
      uint8 loiter_switch;

      @verbatim (language="comment", text=
        " offboard 2 position switch (optional): _NORMAL_, OFFBOARD")
      uint8 offboard_switch;

      @verbatim (language="comment", text=
        " throttle kill: _NORMAL_, KILL")
      uint8 kill_switch;

      @verbatim (language="comment", text=
        " landing gear switch: _DOWN_, UP")
      uint8 gear_switch;

      @verbatim (language="comment", text=
        " VTOL transition switch: _HOVER, FORWARD_FLIGHT")
      uint8 transition_switch;

      @verbatim (language="comment", text=
        " Photo trigger switch")
      uint8 photo_switch;

      @verbatim (language="comment", text=
        " Photo trigger switch")
      uint8 video_switch;

      @verbatim (language="comment", text=
        " Engage the main motor (for helicopters)")
      uint8 engage_main_motor_switch;

      @verbatim (language="comment", text=
        " number of switch changes")
      uint32 switch_changes;
    };
  };
};
