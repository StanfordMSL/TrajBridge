// generated from rosidl_adapter/resource/msg.idl.em
// with input from px4_msgs/msg/UavcanParameterRequest.msg
// generated code does not contain a copyright notice


module px4_msgs {
  module msg {
    typedef uint8 uint8__17[17];
    module UavcanParameterRequest_Constants {
      const uint8 MESSAGE_TYPE_PARAM_REQUEST_READ = 20;
      const uint8 MESSAGE_TYPE_PARAM_REQUEST_LIST = 21;
      const uint8 MESSAGE_TYPE_PARAM_SET = 23;
      const uint8 NODE_ID_ALL = 0;
      const uint8 PARAM_TYPE_UINT8 = 1;
      const uint8 PARAM_TYPE_INT64 = 8;
      const uint8 PARAM_TYPE_REAL32 = 9;
      const uint8 ORB_QUEUE_LENGTH = 4;
    };
    @verbatim (language="comment", text=
      " UAVCAN-MAVLink parameter bridge request type")
    struct UavcanParameterRequest {
      @verbatim (language="comment", text=
        " time since system start (microseconds)")
      uint64 timestamp;

      @verbatim (language="comment", text=
        " MAVLink message type: PARAM_REQUEST_READ, PARAM_REQUEST_LIST, PARAM_SET")
      uint8 message_type;

      @verbatim (language="comment", text=
        " UAVCAN node ID mapped from MAVLink component ID")
      uint8 node_id;

      @verbatim (language="comment", text=
        " MAVLink/UAVCAN parameter name")
      uint8__17 param_id;

      @verbatim (language="comment", text=
        " -1 if the param_id field should be used as identifier")
      int16 param_index;

      @verbatim (language="comment", text=
        " MAVLink parameter type")
      uint8 param_type;

      @verbatim (language="comment", text=
        " current value if param_type is int-like")
      int64 int_value;

      @verbatim (language="comment", text=
        " current value if param_type is float-like")
      float real_value;
    };
  };
};
